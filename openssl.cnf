[ req ]
#default_bits           = 2048
#default_md             = sha256
#default_keyfile        = privkey.pem
distinguished_name      = req_distinguished_name
attributes              = req_attributes

[ req_distinguished_name ]
countryName                     = Country Name (2 letter code)
countryName_min                 = 2
countryName_max                 = 2
stateOrProvinceName             = State or Province Name (full name)
localityName                    = Locality Name (eg, city)
0.organizationName              = Organization Name (eg, company)
organizationalUnitName          = Organizational Unit Name (eg, section)
commonName                      = Common Name (eg, fully qualified host name)
commonName_max                  = 64
emailAddress                    = Email Address
emailAddress_max                = 64

[ req_attributes ]
challengePassword               = A challenge password
challengePassword_min           = 4
challengePassword_max           = 20

[ req_distinguished_name ]
countryName_default = JP
stateOrProvinceName_default = Tokyo
localityName_default = Itabashi
0.organizationName_default = example.com
emailAddress_default = webmaster@example.com

[CA]
basicConstraints=critical,CA:TRUE,pathlen:0
keyUsage=digitalSignature,keyCertSign,cRLSign

[Server]
basicConstraints=CA:FALSE
keyUsage=digitalSignature,dataEncipherment
extendedKeyUsage=serverAuth

[Client]
basicConstraints=CA:FALSE
keyUsage=digitalSignature,dataEncipherment
extendedKeyUsage=clientAuth

# ルート認証局
# STEP1 RSA(アルゴリズム)秘密鍵を作成
# openssl genrsa -out ca.key 2048
# STEP2 証明書署名要求
# openssl req -new -sha256 -key ca.key -out ca.csr -config openssl.cnf
# STEP3 証明書の確認
# x509は証明書の形式
# openssl x509 -in ca.csr -days 365 -req -signkey ca.key -sha256 -out ca.crt -extfile ./openssl.cnf -extensions CA

# サーバーの証明書
# openssl genrsa -out server.key 2048
# openssl req -new -nodes -sha256 -key server.key -out server.csr -config openssl.cnf
# openssl x509 -req -days 365 -in server.csr -sha256 -out server.crt -CA ca.crt -CAkey ca.key -CAcreateserial -extfile ./openssl.cnf -extensions Server
